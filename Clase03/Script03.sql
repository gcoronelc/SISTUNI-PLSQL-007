
CREATE OR REPLACE PACKAGE SCOTT.PKG_UTIL AS

TYPE T_ARRAY_STRING IS TABLE OF VARCHAR2(1000) 
INDEX BY BINARY_INTEGER;

FUNCTION SUMA( N1 IN NUMBER, N2 IN NUMBER ) 
RETURN NUMBER; 

FUNCTION SUMA( N1 IN NUMBER, N2 IN NUMBER, N3 IN NUMBER ) 
RETURN NUMBER; 

FUNCTION SPLIT(P_DATA VARCHAR2, P_DELIMITADOR VARCHAR2 ) 
RETURN T_ARRAY_STRING;

END PKG_UTIL;
/



CREATE OR REPLACE PACKAGE BODY SCOTT.PKG_UTIL AS

FUNCTION SUMA( N1 IN NUMBER, N2 IN NUMBER ) 
RETURN NUMBER 
AS
  RTN NUMBER;
BEGIN
  RTN := N1 + N2; 
  RETURN RTN;
END;

FUNCTION SUMA( N1 IN NUMBER, N2 IN NUMBER, N3 IN NUMBER ) 
RETURN NUMBER 
AS
  RTN NUMBER;
BEGIN
  RTN := N1 + N2 + N3; 
  RETURN RTN;
END;

FUNCTION SPLIT(P_DATA VARCHAR2, P_DELIMITADOR VARCHAR2 ) 
RETURN T_ARRAY_STRING
IS
    I        NUMBER   := 0;
    POS      NUMBER   := 0;
    V_DATA   CLOB     := P_DATA;
    STRINGS  T_ARRAY_STRING;
BEGIN
  V_DATA := TRIM( V_DATA );
  POS := INSTR( V_DATA, P_DELIMITADOR, 1, 1 );
  WHILE ( POS != 0) LOOP
      I := I + 1;
      STRINGS(i) := SUBSTR( V_DATA, 1, POS - 1 );
      V_DATA :=  SUBSTR( V_DATA, POS + 1, LENGTH(V_DATA) );
      pos := instr(V_DATA, P_DELIMITADOR, 1, 1);
      IF POS = 0 THEN
          STRINGS( I + 1 ) := V_DATA;
      END IF;    
  END LOOP;
  IF I = 0 AND LENGTH( V_DATA ) > 0 THEN
    STRINGS( I + 1 ) := V_DATA;
  END IF;
  RETURN strings;
END SPLIT;

END PKG_UTIL;
/



SELECT 
  SCOTT.PKG_UTIL.SUMA( 12,13),
  SCOTT.PKG_UTIL.SUMA( 12,13,14)   
FROM DUAL;




DECLARE 
    V_DATOS   VARCHAR2(1000);
    V_ARREGLO SCOTT.PKG_UTIL.T_ARRAY_STRING;
BEGIN
  V_DATOS := '111|GUSTAVO|GCORONELC@GMAIL.COM|20000';
  V_ARREGLO := SCOTT.PKG_UTIL.SPLIT(V_DATOS,'|');
  DBMS_OUTPUT.PUT_LINE('COUNT: ' || V_ARREGLO.COUNT);
  FOR I in 1 .. V_ARREGLO.COUNT LOOP 
    DBMS_OUTPUT.PUT_LINE(V_ARREGLO(I)); 
  END LOOP;
END;
/


/*
Ejemplo
Desarrollar un procedimiento que permita
registrar varios empleados en la tabla 
SCOTT.EMP, y que su salario sea el 
promedio de su departamento.
*/


/*
  CODIGO|NOMBRE|DPTO¬CODIGO|NOMBRE|DPTO
*/
CREATE OR REPLACE PROCEDURE SP_INSERTA_EMP
( P_DATOS IN VARCHAR2 )
AS
  V_FILAS    SCOTT.PKG_UTIL.T_ARRAY_STRING;
  V_CAMPOS   SCOTT.PKG_UTIL.T_ARRAY_STRING;
  V_SAL_PROM NUMBER(7,2);
BEGIN
  V_FILAS := SCOTT.PKG_UTIL.SPLIT(P_DATOS,'¬');
  FOR I in 1 .. V_FILAS.COUNT LOOP 
    
    V_CAMPOS := SCOTT.PKG_UTIL.SPLIT(V_FILAS(I),'|');
    
    SELECT AVG(SAL) INTO V_SAL_PROM
    FROM SCOTT.EMP WHERE DEPTNO = V_CAMPOS(3);
    
    INSERT INTO SCOTT.EMP(EMPNO, ENAME, DEPTNO, SAL )
    VALUES(V_CAMPOS(1), V_CAMPOS(2), V_CAMPOS(3), V_SAL_PROM );
    
  END LOOP;
  
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('PROCESO OK');
  
EXCEPTION

  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    ROLLBACK;

END;



SELECT * FROM SCOTT.DEPT;
SELECT nvl(job,'chihuan') FROM SCOTT.EMP;

DECLARE
  V_DATOS VARCHAR2(6000);
BEGIN
  V_DATOS := '1111|GUSTAVO|10¬1112|PEDRO|20¬1113|MARTHA|30';
  SCOTT.SP_INSERTA_EMP (V_DATOS);
END;


/*
Tarea 

Desarrollar un procedimiento almacnado que
permita cagar empleados en la tabla
RECURSOS.EMPLEADO, el salario debe ser el
promedio entre el maximo y minimo segun su cargo.
*/




